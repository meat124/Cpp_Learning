15-1강 쓰레드(thread)

- 프로세스와 쓰레드

프로세스는 운영체제에서 실행되는 프로그램의 최소 단위이다.

보통 1개의 프로그램을 가리킬 때, 1개의 프로세스를 의미하는 경우가 많다.

CPU 가 1개의 코어를 가질 경우, 한 번에 한 개의 연산을 수행한다.

컴퓨터에서 프로그램이 실행될 때, 프로그램이 연속적으로 작동하는 것 처럼 보이지만, 실제로는 그렇지 않다.
실제로는 컨텍스트 스위칭(context switching) 이라는 기술을 통해, 프로그램 하나가 잠시 실행되었다가, 다른 프로그램으로 스위칭된다.

즉 CPU 는 운영체제가 처리하라고 시키는 명령어들을 실행하고, 어떤 프로그램을 얼마동안 실행시키고, 다음에 어떤 프로그램으로 스위칭 할지는 운영체제의 스케쥴러가 알아서 결정하게 된다.

이 CPU 코어에서 돌아가는 프로그램 단위를 쓰레드 라고 한다.
즉, CPU 의 코어 하나에서는 한 번에 한 개의 쓰레드 명령을 실행시키게 된다.
한 개의 프로세스는 최소 한 개의 쓰레드로 이루어져 있으며, 여러개의 쓰레드로 구성될 수 있다.
이렇게 여러개의 쓰레드로 구성된 프로그램을 멀티 쓰레드 프로그램이라고 한다.

쓰레드와 프로세스의 차이점
: 프로세스들은 서로 메모리를 공유하지 않는다.
하지만 쓰레드는 한 프로세스 안에 쓰레드1 과 쓰레드 2 가 있다면, 서로 같은 메모리를 공유하게 된다.
즉, 쓰레드 1과 쓰레드 2 가 같은 변수에 값에 접근할 수 있다.

최근에는 CPU 의 발전 방향이 코어의 개수를 늘리는 식으로 발전했다.
따라서 싱글 코어에서는 멀티 쓰레드 프로그램이어도 한 번에 한 개의 쓰레드만 실행할 수 있었지만, 멀티 코어 CPU 에서는 여러 개의 코어에 각기 다른 쓰레드 들이 들어가서 동시에 여러개의 쓰레드들을 효율적으로 실행할 수 있다.

그렇다면 어떤 프로그램을 멀티 쓰레드로 만드는 것이 유리할까?

1. 병렬 가능한 작업들
예를 들어 1 부터 10000까지 더하는 작업을 할 경우, 단순히 for 문으로 1 부터 다 더한다면 1번의 연산에 1초가 걸린다고 하면 10000초가 걸리지만, CPU 에 코어가 10개 존재하고 멀티쓰레드를 사용할 경우, 각 코에서 1000 단위로 각각 더해서 마지막에 그것들을 합치기만 한다면 1010초가 걸리게된다.
따라서 속도가 매우 향상된다.
하지만 항상 이렇게 병렬 작업을 할 수 있는 것은 아니다.
프로그램 논리 구조 상에서 연산들 간의 의존 관계가 많을 경우, 병렬화가 어려워지고, 반대로, 다른 연산의 결과와 관계없이 독립적으로 수행할 수 있는 구조가 많을수록 병렬화가 매우 쉬워진다.

2. 대기시간이 긴 작업들
인터넷에서 웹사이트를 긁어모으는 프로그램을 생각해본다.
ping 이라는 것은 내가 보낸 요청이 상대 서버에 도착해서 다시 나에게 돌아오는데 걸리는 시간을 의미한다.
국내에서는 30ms, 해외의 경우는 약 150ms 정도이다.
0.15 초는 컴퓨터에게는 많은 것을 할 수 있는 시간이다.
따라서 요청을 기다리기만 한다면 CPU 코어를 비효율적으로 사용하게 되는 것이다.
이렇게 요청을 보내는 것을 여러 쓰레드에서 부르게 되면 기다리는 시간을 낭비하지 않고, 바로 웹사이트 2에 요청을 보낸다.
따라서 효율적으로 작업을 처리할 수 있게 된다.


- C++ 에서 쓰레드 생성하기
이전에는 C++ 표준에 쓰레드가 없어서, 각 플랫폼 마다 다른 구현을 해야 했다.
하지만 modern C++ 에서 부터는 표준에 쓰레드가 추가되면서 사용이 매우 편리해졌다.

#include<thread> 를 통해 라이브러리를 추가하고
thread t1(func1); 를 통해 쓰레드 하나를 추가한다.
join 함수는 쓰레드들이 실행을 종료하면 리턴하는 함수이다.
join 되거나 detach 되지 않는 쓰레드들의 소멸자가 호출된다면 예외를 발생시킨다.

detach 함수는 해당 쓰레드를 실행 시킨 후, 잊어버리는 것이다. 쓰레드는 알아서 백그라운드에서 돌아가게 된다.
기본적으로 프로세스가 종료될 때, 해당 프로세스 안에 있는 모든 쓰레드들은 종료 여부와 상관없이 자동으로 종료된다.
즉 main 함수에서 메인함수 종료를 출력하고 프로세스가 종료하게 되면 func1,2,3 모두 더 이상 쓰레드 작동중! 을 출력할 수 없다.

- 쓰레드에 인자 전달하기
