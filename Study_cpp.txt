6-1 강
string 클래스를 배운다.
-사원 관리 프로그램

1. 사원의 정보를 클래스로 만들어서 보관한다.
 이름, 나이, 직책 등등

2. 사원 데이터를 관리하는 멤버 변수를 만든다.
할당한 총 직원 수, 현재 직원 수, 직원 데이터
동적으로 데이터를 할당하는 것을 처리하기 위해서는 두 개의 변수가 필요했다.
현재 할당된 총 크기, 그 중에서 실제로 사용하고 있는 양
이렇게 해야 할당된 크기보다 더 많은 양을 실수로 사용하는 것을 막을 수 있다.

이중 포인터를 이용해서 직원의 데이터를 선언하는 이유는 우리가 Employee* 객체를 담는 배열로 사용할 것이기 때문이다.(포인터를 가리키는 포인터이므로)

-상속(Inheritance)
Manager 클래스를 추가하면서 복사 붙여넣기 를 계속하면서 어려움을 느꼈다. Manager 의 코드 자체가 Employee의 내용을 대부분 포함하고 있기 때문이다. 따라서 C++ 에서는 이러한 다른 클래스의 다른 내용을 포함하게 하는 작업을 가능하게 해준다. 이를 상속이라 한다.

상속을 통해 다른 클래스의 정보를 물려 받아서 사용할 수 있다.

멤버함수는 상속받은 클래스 안에 다시 멤버함수가 선언되지 않으면 기존의 부모 클래스의 내부에 존재하는 멤버함수가 실행된다. 
예제의 경우에 Derived에 what 함수가 정의되어 있으므로 굳이 멀리 Base까지 가지 않고 가까이 있는 Derived의 what 함수를 호출하게 된다.
>>> 이러한 것을 가리켜 오버라이딩(overriding) 이라고 한다. 즉 Derived의 what 함수가 Base의 what 함수를 오버라이딩 한 것이다.
(오버로딩 : 같은 이름의 함수를 인자를 달리 하여 정의하는 것 > 헷갈리지 말기)

만약 상속받은 자식 클래스가 부모 클래스의 private 멤버 변수에 접근하려하면 컴파일 오류가 발생한다.
사실 private 멤버 변수에는 자기 클래스 말고는 어떠한 경우에도 접근이 불가능하다.

하지만 종종 파생 클래스에서 기반 클래스로 직접 접근할 필요성이 있다.
예를 들어 Employee 클래스를 기반으로 Manager 클래스가 상속받았을 때